plugins {
    id 'fabric-loom' version '0.7-SNAPSHOT'
    id 'maven-publish'
    id 'idea'
    id "com.modrinth.minotaur" version "2.+"
    id "me.hypherionmc.cursegradle" version "2.0.1"
}

archivesBaseName = "${mod_name}-fabric-${minecraft_version}"

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    implementation project(":Common")

    implementation 'org.apache.commons:commons-compress:1.21'
    include 'org.apache.commons:commons-compress:1.21'
}

loom {
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}


processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }

    filesMatching('*.mixins.json') {
        expand "refmap_target": "${archivesBaseName}-"
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

jar {
    from("LICENSE") {
        rename { "${it}_${mod_name}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}

task delDevJar {
    doLast {
        def tree = fileTree("build/libs")
        tree.include '**/*-dev.jar'
        tree.each { it.delete() }
    }
}

build.finalizedBy delDevJar

modrinth {
    debugMode = false
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "QOkEkSap"
    versionNumber = "${minecraft_version}-${project.version}f"
    versionType = "release"
    uploadFile = remapJar
    changelog = rootProject.file("changelog-fabric.md").text.trim()
    versionName = "[FABRIC 1.16.5] Maintenance Mode - " + project.version
    gameVersions = ["1.16.5"]
    loaders = [ "fabric" ]
    dependencies {
        required.project "P7dR8mSH"
    }
}

curseforge {
    if (System.getenv("CURSE_TOKEN") !== null) {
        apiKey = System.getenv("CURSE_TOKEN")
    } else {
        apiKey = ""
    }
    project {
        id = "630716"
        releaseType = "release"
        addGameVersion "1.16.5"
        addGameVersion "Fabric"
        addGameVersion "Java 8"
        changelogType = "markdown"
        changelog = rootProject.file("changelog-fabric.md")
        mainArtifact(remapJar) {
            displayName = "[Fabric 1.16.5] Maintenance Mode - $project.version"
        }
        relations {
            requiredDependency 'fabric-api'
        }
    }
    options {
        forgeGradleIntegration = false
        debug = false
        fabricIntegration = false
    }
}

afterEvaluate {
    tasks.curseforge630716.dependsOn remapJar
}
