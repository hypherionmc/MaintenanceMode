buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id "com.modrinth.minotaur" version "2.+"
    id "me.hypherionmc.cursegradle" version "2.0.1"
}

apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'maven-publish'

archivesBaseName = "${mod_name}-forge-${minecraft_version}"

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"

    config "${mod_id}.mixins.json"
    config "${mod_id}.forge.mixins.json"
}

minecraft {
    mappings channel: 'official', version: minecraft_version

    if (project.hasProperty('forge_ats_enabled') && project.findProperty('forge_ats_enabled').toBoolean()) {
        // This location is hardcoded in Forge and can not be changed.
        // https://github.com/MinecraftForge/MinecraftForge/blob/be1698bb1554f9c8fa2f58e32b9ab70bc4385e60/fmlloader/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModFile.java#L123
        accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
        project.logger.debug('Forge Access Transformers are enabled for this project.')
    }

    runs {
        client {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Client'
            args "-mixin.config=${mod_id}.mixins.json", "-mixin.config=${mod_id}.forge.mixins.json"
            mods {
                modClientRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Server'
            args "-mixin.config=${mod_id}.mixins.json", "-mixin.config=${mod_id}.forge.mixins.json"
            mods {
                modServerRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            taskName 'Data'
            args "-mixin.config=${mod_id}.mixins.json", "-mixin.config=${mod_id}.forge.mixins.json"
            mods {
                modDataRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    compileOnly project(":Common")
    annotationProcessor 'org.spongepowered:mixin:0.8.4-SNAPSHOT:processor'
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

processResources {
    from project(":Common").sourceSets.main.resources

    filesMatching('*.mixins.json') {
        expand "refmap_target": "${mod_id}."
    }
}

reobf {
    shadowJar {
        dependencies {
            include(dependency('org.apache.commons:commons-compress:1.21'))
        }

        relocate "org.apache.commons", "shadow.apache.commons"
        classifier ''
    }
}

build.dependsOn reobfShadowJar

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}

modrinth {
    debugMode = false
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "QOkEkSap"
    versionNumber = "${minecraft_version}-${project.version}"
    versionType = "release"
    uploadFile = jar
    changelog = rootProject.file("changelog-forge.md").text.trim()
    versionName = "[FORGE 1.19.x] Maintenance Mode - " + project.version
    gameVersions = ["1.19"]
    loaders = [ "forge" ]
}

curseforge {
    if (System.getenv("CURSE_TOKEN") !== null) {
        apiKey = System.getenv("CURSE_TOKEN")
    } else {
        apiKey = ""
    }
    project {
        id = "630716"
        releaseType = "release"
        addGameVersion "1.19"
        addGameVersion "Forge"
        addGameVersion "Java 17"
        changelogType = "markdown"
        changelog = rootProject.file("changelog-forge.md")
        mainArtifact(jar) {
            displayName = "[Forge 1.19.x] Maintenance Mode - $project.version"
        }
    }
    options {
        forgeGradleIntegration = false
        debug = false
        fabricIntegration = false
    }
}

afterEvaluate {
    tasks.curseforge630716.dependsOn reobfShadowJar
}
